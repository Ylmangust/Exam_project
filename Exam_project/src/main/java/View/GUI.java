/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import Controller.Controller;
import Model.enums.PriorityLevel;
import Model.databaseEntities.Project;
import Model.enums.Role;
import Model.enums.Status;
import Model.databaseEntities.Task;
import Model.databaseEntities.User;
import java.time.format.DateTimeParseException;
import java.util.Arrays;
import javax.swing.JTextField;

/**
 *
 * @author Регина
 */
public class GUI extends javax.swing.JFrame {

    private final Controller controller;
    DefaultListModel<Task> taskListModel = new DefaultListModel<>();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

    public GUI(Controller ctrl) {
        this.controller = ctrl;
        initComponents();
        startGUI();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        authorizationDialog = new javax.swing.JDialog();
        authorizationPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();
        loginInfoLbl = new javax.swing.JLabel();
        newProjectDialog = new javax.swing.JDialog();
        projectInfoPanel = new javax.swing.JPanel();
        projectNameLbl = new javax.swing.JLabel();
        projectNameField = new javax.swing.JTextField();
        projectDescriptionLbl = new javax.swing.JLabel();
        descriptionScroll = new javax.swing.JScrollPane();
        projectDescriptionText = new javax.swing.JTextArea();
        startDateLbl = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        endProjectDate = new javax.swing.JTextField();
        startProjectDate = new javax.swing.JTextField();
        createProjectBtn = new javax.swing.JButton();
        executorsScroll = new javax.swing.JScrollPane();
        executorsTable = new javax.swing.JTable();
        reportsDialog = new javax.swing.JDialog();
        projectsScroll = new javax.swing.JScrollPane();
        projectsTree = new javax.swing.JTree();
        exportBtnPanel = new javax.swing.JPanel();
        exportBtn = new javax.swing.JButton();
        myTasksDialog = new javax.swing.JDialog();
        filterPanel = new javax.swing.JPanel();
        statusFilterCombo = new javax.swing.JComboBox<>();
        statusFilterLbl = new javax.swing.JLabel();
        priorityFilterLbl = new javax.swing.JLabel();
        priorityFilterCombo = new javax.swing.JComboBox<>();
        createdFilterLbl = new javax.swing.JLabel();
        createdFilterCombo = new javax.swing.JComboBox<>();
        createTaskBtn = new javax.swing.JButton();
        tasksScroll = new javax.swing.JScrollPane();
        tasksList = new javax.swing.JList<>();
        newTaskDialog = new javax.swing.JDialog();
        taskInfoPanel = new javax.swing.JPanel();
        taskNameLbl = new javax.swing.JLabel();
        taskNameField = new javax.swing.JTextField();
        taskDescriptionLbl = new javax.swing.JLabel();
        taskdescriptionScroll = new javax.swing.JScrollPane();
        taskDescriptionText = new javax.swing.JTextArea();
        priorityLbl = new javax.swing.JLabel();
        deadlineLbl = new javax.swing.JLabel();
        taskDeadline = new javax.swing.JTextField();
        createNewTaskBtn = new javax.swing.JButton();
        executorCombo = new javax.swing.JComboBox<>();
        executorLbl = new javax.swing.JLabel();
        priorityCombo = new javax.swing.JComboBox<>();
        projectLbl = new javax.swing.JLabel();
        projectCombo = new javax.swing.JComboBox<>();
        ganttDiagramDialog = new javax.swing.JDialog();
        diagramPanel = new javax.swing.JPanel();
        executorsStatistics = new javax.swing.JDialog();
        statisticsScroll = new javax.swing.JScrollPane();
        statisticsTable = new javax.swing.JTable();
        newUserDialog = new javax.swing.JDialog();
        newUserPanel = new javax.swing.JPanel();
        fullNameLbl = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        roleLbl = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox<>();
        fullNameField = new javax.swing.JTextField();
        usernameField = new javax.swing.JTextField();
        createUserBtn = new javax.swing.JButton();
        lblPanel = new javax.swing.JPanel();
        tableNameLbl = new javax.swing.JLabel();
        tableScroll = new javax.swing.JScrollPane();
        activeProjectsTable = new javax.swing.JTable();
        mainMenuBar = new javax.swing.JMenuBar();
        menuOptions = new javax.swing.JMenu();
        newProjectItem = new javax.swing.JMenuItem();
        myTasksItem = new javax.swing.JMenuItem();
        reportsItem = new javax.swing.JMenuItem();
        newUserItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        authorizationDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        authorizationDialog.setTitle("Вход в систему");
        authorizationDialog.setModal(true);
        authorizationDialog.setResizable(false);

        loginLabel.setText("Логин*:");

        passwordLabel.setText("Пароль*:");

        loginBtn.setText("Войти");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        loginInfoLbl.setText("*Логин и пароль можно получить у администратора.");

        javax.swing.GroupLayout authorizationPanelLayout = new javax.swing.GroupLayout(authorizationPanel);
        authorizationPanel.setLayout(authorizationPanelLayout);
        authorizationPanelLayout.setHorizontalGroup(
            authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authorizationPanelLayout.createSequentialGroup()
                .addGroup(authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(authorizationPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(authorizationPanelLayout.createSequentialGroup()
                                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loginField))
                            .addGroup(authorizationPanelLayout.createSequentialGroup()
                                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(authorizationPanelLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(loginBtn))
                    .addGroup(authorizationPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(loginInfoLbl)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        authorizationPanelLayout.setVerticalGroup(
            authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authorizationPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginLabel)
                    .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(authorizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginInfoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(loginBtn)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout authorizationDialogLayout = new javax.swing.GroupLayout(authorizationDialog.getContentPane());
        authorizationDialog.getContentPane().setLayout(authorizationDialogLayout);
        authorizationDialogLayout.setHorizontalGroup(
            authorizationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authorizationDialogLayout.createSequentialGroup()
                .addComponent(authorizationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        authorizationDialogLayout.setVerticalGroup(
            authorizationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(authorizationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        newProjectDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        newProjectDialog.setTitle("Создание нового проекта");
        newProjectDialog.setResizable(false);

        projectNameLbl.setText("Название: ");

        projectDescriptionLbl.setText("Описание: ");

        projectDescriptionText.setColumns(20);
        projectDescriptionText.setRows(5);
        descriptionScroll.setViewportView(projectDescriptionText);

        startDateLbl.setText("Дата начала: ");

        endDateLbl.setText("Дата окончания: ");

        createProjectBtn.setText("Создать проект");
        createProjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout projectInfoPanelLayout = new javax.swing.GroupLayout(projectInfoPanel);
        projectInfoPanel.setLayout(projectInfoPanelLayout);
        projectInfoPanelLayout.setHorizontalGroup(
            projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectInfoPanelLayout.createSequentialGroup()
                .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(projectInfoPanelLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(createProjectBtn))
                    .addGroup(projectInfoPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectDescriptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(projectNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startProjectDate)
                            .addComponent(endProjectDate)
                            .addComponent(descriptionScroll)
                            .addComponent(projectNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        projectInfoPanelLayout.setVerticalGroup(
            projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectInfoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLbl)
                    .addComponent(projectNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectDescriptionLbl))
                .addGap(39, 39, 39)
                .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startProjectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDateLbl))
                .addGap(34, 34, 34)
                .addGroup(projectInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endDateLbl)
                    .addComponent(endProjectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(createProjectBtn)
                .addContainerGap())
        );

        executorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Выбрать", "Пользователь"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        executorsScroll.setViewportView(executorsTable);
        if (executorsTable.getColumnModel().getColumnCount() > 0) {
            executorsTable.getColumnModel().getColumn(0).setResizable(false);
            executorsTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            executorsTable.getColumnModel().getColumn(1).setMinWidth(40);
            executorsTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        }

        javax.swing.GroupLayout newProjectDialogLayout = new javax.swing.GroupLayout(newProjectDialog.getContentPane());
        newProjectDialog.getContentPane().setLayout(newProjectDialogLayout);
        newProjectDialogLayout.setHorizontalGroup(
            newProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProjectDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executorsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        newProjectDialogLayout.setVerticalGroup(
            newProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProjectDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(executorsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        reportsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        reportsDialog.setTitle("Отчёты");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Проекты");
        projectsTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        projectsScroll.setViewportView(projectsTree);

        exportBtn.setText("Экспортировать отчёт");

        javax.swing.GroupLayout exportBtnPanelLayout = new javax.swing.GroupLayout(exportBtnPanel);
        exportBtnPanel.setLayout(exportBtnPanelLayout);
        exportBtnPanelLayout.setHorizontalGroup(
            exportBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportBtnPanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exportBtnPanelLayout.setVerticalGroup(
            exportBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportBtnPanelLayout.createSequentialGroup()
                .addComponent(exportBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout reportsDialogLayout = new javax.swing.GroupLayout(reportsDialog.getContentPane());
        reportsDialog.getContentPane().setLayout(reportsDialogLayout);
        reportsDialogLayout.setHorizontalGroup(
            reportsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportBtnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(reportsDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(projectsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        reportsDialogLayout.setVerticalGroup(
            reportsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsDialogLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(projectsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exportBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        myTasksDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        myTasksDialog.setTitle("Мои задачи");
        myTasksDialog.setResizable(false);

        statusFilterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все", "Новые", "В работе", "Завершенные", "Просроченные" }));
        statusFilterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusFilterComboActionPerformed(evt);
            }
        });

        statusFilterLbl.setText("Фильтровать по статусам:");

        priorityFilterLbl.setText("Фильтровать по приоритету:");

        priorityFilterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все", "Высокий", "Средний", "Низкий" }));
        priorityFilterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityFilterComboActionPerformed(evt);
            }
        });

        createdFilterLbl.setText("Сортировать по дате создания:");

        createdFilterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "По возрастанию", "По убыванию" }));
        createdFilterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createdFilterComboActionPerformed(evt);
            }
        });

        createTaskBtn.setText("Создать задачу");
        createTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTaskBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addComponent(createdFilterLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createdFilterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(priorityFilterLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(statusFilterLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priorityFilterCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusFilterCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(createTaskBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusFilterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusFilterLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityFilterLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priorityFilterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createdFilterLbl)
                    .addComponent(createdFilterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createTaskBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tasksList.setRequestFocusEnabled(false);
        tasksScroll.setViewportView(tasksList);

        javax.swing.GroupLayout myTasksDialogLayout = new javax.swing.GroupLayout(myTasksDialog.getContentPane());
        myTasksDialog.getContentPane().setLayout(myTasksDialogLayout);
        myTasksDialogLayout.setHorizontalGroup(
            myTasksDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myTasksDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myTasksDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tasksScroll)
                    .addComponent(filterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        myTasksDialogLayout.setVerticalGroup(
            myTasksDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myTasksDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tasksScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        newTaskDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        newTaskDialog.setTitle("Создание новой задачи");
        newTaskDialog.setResizable(false);

        taskNameLbl.setText("Название: ");

        taskDescriptionLbl.setText("Описание: ");

        taskDescriptionText.setColumns(20);
        taskDescriptionText.setRows(5);
        taskdescriptionScroll.setViewportView(taskDescriptionText);

        priorityLbl.setText("Приоритет: ");

        deadlineLbl.setText("Дедлайн:");

        createNewTaskBtn.setText("Cоздать задачу");
        createNewTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewTaskBtnActionPerformed(evt);
            }
        });

        executorLbl.setText("Исполнитель:");

        priorityCombo.setModel(new DefaultComboBoxModel<>(PriorityLevel.values())
        );

        projectLbl.setText("Проект:");

        projectCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout taskInfoPanelLayout = new javax.swing.GroupLayout(taskInfoPanel);
        taskInfoPanel.setLayout(taskInfoPanelLayout);
        taskInfoPanelLayout.setHorizontalGroup(
            taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskInfoPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(projectLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deadlineLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priorityLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(taskDescriptionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(taskNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(executorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(taskdescriptionScroll)
                    .addComponent(taskNameField)
                    .addComponent(taskDeadline)
                    .addComponent(priorityCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(executorCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(taskInfoPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(createNewTaskBtn))
                    .addComponent(projectCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        taskInfoPanelLayout.setVerticalGroup(
            taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskInfoPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectLbl)
                    .addComponent(projectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskNameLbl)
                    .addComponent(taskNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(taskdescriptionScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taskDescriptionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(taskInfoPanelLayout.createSequentialGroup()
                        .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(executorLbl)
                            .addComponent(executorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(taskInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priorityLbl)
                            .addComponent(priorityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(deadlineLbl))
                    .addComponent(taskDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(createNewTaskBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout newTaskDialogLayout = new javax.swing.GroupLayout(newTaskDialog.getContentPane());
        newTaskDialog.getContentPane().setLayout(newTaskDialogLayout);
        newTaskDialogLayout.setHorizontalGroup(
            newTaskDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTaskDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newTaskDialogLayout.setVerticalGroup(
            newTaskDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTaskDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ganttDiagramDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ganttDiagramDialog.setTitle("График выполнения проекта");

        javax.swing.GroupLayout diagramPanelLayout = new javax.swing.GroupLayout(diagramPanel);
        diagramPanel.setLayout(diagramPanelLayout);
        diagramPanelLayout.setHorizontalGroup(
            diagramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );
        diagramPanelLayout.setVerticalGroup(
            diagramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ganttDiagramDialogLayout = new javax.swing.GroupLayout(ganttDiagramDialog.getContentPane());
        ganttDiagramDialog.getContentPane().setLayout(ganttDiagramDialogLayout);
        ganttDiagramDialogLayout.setHorizontalGroup(
            ganttDiagramDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(diagramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ganttDiagramDialogLayout.setVerticalGroup(
            ganttDiagramDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(diagramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        executorsStatistics.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        statisticsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Участник", "Кол-во просроченных задач", "Кол-во завершенных задач"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        statisticsScroll.setViewportView(statisticsTable);

        javax.swing.GroupLayout executorsStatisticsLayout = new javax.swing.GroupLayout(executorsStatistics.getContentPane());
        executorsStatistics.getContentPane().setLayout(executorsStatisticsLayout);
        executorsStatisticsLayout.setHorizontalGroup(
            executorsStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executorsStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statisticsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        executorsStatisticsLayout.setVerticalGroup(
            executorsStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executorsStatisticsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statisticsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        newUserDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        newUserDialog.setTitle("Регистрация нового пользователя");

        fullNameLbl.setText("Полное имя:");

        usernameLbl.setText("Имя пользователя:");

        roleLbl.setText("Роль:");

        roleComboBox.setModel(new DefaultComboBoxModel<>(Role.values()));

        createUserBtn.setText("Добавить");
        createUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newUserPanelLayout = new javax.swing.GroupLayout(newUserPanel);
        newUserPanel.setLayout(newUserPanelLayout);
        newUserPanelLayout.setHorizontalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newUserPanelLayout.createSequentialGroup()
                        .addComponent(usernameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameField))
                    .addGroup(newUserPanelLayout.createSequentialGroup()
                        .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fullNameLbl)
                            .addComponent(roleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fullNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newUserPanelLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(createUserBtn)))))
                .addGap(0, 35, Short.MAX_VALUE))
        );
        newUserPanelLayout.setVerticalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullNameLbl)
                    .addComponent(fullNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLbl)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLbl)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(createUserBtn)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout newUserDialogLayout = new javax.swing.GroupLayout(newUserDialog.getContentPane());
        newUserDialog.getContentPane().setLayout(newUserDialogLayout);
        newUserDialogLayout.setHorizontalGroup(
            newUserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        newUserDialogLayout.setVerticalGroup(
            newUserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newUserPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableNameLbl.setText("Активные проекты");

        javax.swing.GroupLayout lblPanelLayout = new javax.swing.GroupLayout(lblPanel);
        lblPanel.setLayout(lblPanelLayout);
        lblPanelLayout.setHorizontalGroup(
            lblPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(tableNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lblPanelLayout.setVerticalGroup(
            lblPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblPanelLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(tableNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        activeProjectsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название", "Статус", "Дедлайн"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScroll.setViewportView(activeProjectsTable);

        menuOptions.setText("Меню");

        newProjectItem.setText("Новый проект");
        newProjectItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectItemActionPerformed(evt);
            }
        });
        menuOptions.add(newProjectItem);

        myTasksItem.setText("Мои задачи");
        myTasksItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myTasksItemActionPerformed(evt);
            }
        });
        menuOptions.add(myTasksItem);

        reportsItem.setText("Отчеты");
        menuOptions.add(reportsItem);

        newUserItem.setText("Добавить нового пользователя");
        newUserItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserItemActionPerformed(evt);
            }
        });
        menuOptions.add(newUserItem);

        exitMenuItem.setText("Выйти");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        menuOptions.add(exitMenuItem);

        mainMenuBar.add(menuOptions);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(lblPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        if (!loginField.getText().trim().isEmpty() && passwordField.getPassword().length != 0) {
            User user = controller.authorization(loginField.getText(), String.valueOf(passwordField.getPassword()));
            List<JTextField> fields = new ArrayList<>(Arrays.asList(loginField, passwordField));
            if (user != null) {
                authorizationDialog.dispose();
                clearFields(fields);
                setUpUserAccess(user.getRole());
                updateProjectsTable();
                makeVisible(this);
            } else {
                JOptionPane.showMessageDialog(null, "Пользователь не найден или неправильно введен логин/пароль!", null, JOptionPane.ERROR_MESSAGE);
                clearFields(fields);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Необходимо заполнить оба поля!", null, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void createTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTaskBtnActionPerformed
        List<Project> projects = controller.getProjectsForCurrentUser();
        projectCombo.removeAllItems();
        for (Project project : projects) {
            projectCombo.addItem(project);
        }
        makeVisible(newTaskDialog);
    }//GEN-LAST:event_createTaskBtnActionPerformed

    private void newProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectItemActionPerformed
        updateExecutorsAvaliableTable();
        makeVisible(newProjectDialog);
    }//GEN-LAST:event_newProjectItemActionPerformed

    private void myTasksItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myTasksItemActionPerformed
        List<Task> tasks = controller.getTasksForCurrentUser();
        taskListModel.clear();
        for (Task t : tasks) {
            taskListModel.addElement(t);
        }
        tasksList.setModel(taskListModel);
        makeVisible(myTasksDialog);
    }//GEN-LAST:event_myTasksItemActionPerformed

    private void newUserItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserItemActionPerformed
        makeVisible(newUserDialog);
    }//GEN-LAST:event_newUserItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.dispose();
        makeVisible(authorizationDialog);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void createNewTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewTaskBtnActionPerformed
        if (!taskNameField.getText().trim().isEmpty() && !taskDeadline.getText().trim().isEmpty() && !taskDescriptionText.getText().trim().isEmpty()) {
            LocalDate newTaskDeadline = null;
            LocalDate today = LocalDate.now();
            try {
                newTaskDeadline = LocalDate.parse(taskDeadline.getText().trim(), formatter);
                if (newTaskDeadline.isBefore(today)) {
                    JOptionPane.showMessageDialog(null, "Дата окончания не может быть раньше даты начала!", null, JOptionPane.WARNING_MESSAGE);
                } else {
                    PriorityLevel priority = (PriorityLevel) priorityCombo.getSelectedItem();
                    User executor = (User) executorCombo.getSelectedItem();
                    Project selected = (Project) projectCombo.getSelectedItem();
                    String newTaskName = taskNameField.getText().trim();
                    String taskDescription = taskDescriptionText.getText().trim();
                    boolean result = controller.createNewTask(newTaskName, taskDescription, selected, executor, priority, newTaskDeadline);
                    if (!result) {
                        JOptionPane.showMessageDialog(null, "Проверьте задачу на совпадение названия и дедлайна с уже существующими!", null, JOptionPane.WARNING_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Задача  успешно создана!", null, JOptionPane.INFORMATION_MESSAGE);
                        updateProjectsTable();
                        newTaskDialog.dispose();
                        List<JTextField> fields = new ArrayList<>(Arrays.asList(taskNameField, taskDeadline));
                        clearFields(fields);
                        taskDescriptionText.setText("");
                    }
                }
            } catch (DateTimeParseException ex) {
                JOptionPane.showMessageDialog(this, "Дата не соотвествует формату ГГГГ-ММ-ДД", null, JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Необходимо заполнить все поля!", null, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_createNewTaskBtnActionPerformed

    private void statusFilterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusFilterComboActionPerformed
        String selected = (String) statusFilterCombo.getSelectedItem();
        List<Task> tasks = controller.getTasksForCurrentUser();
        taskListModel.clear();
        for (Task task : tasks) {
            if ("Все".equals(selected)) {
                taskListModel.addElement(task);
            } else if (selected.equals("Новые") && task.getStatus() == Status.NEW) {
                taskListModel.addElement(task);
            } else if (selected.equals("В работе") && task.getStatus() == Status.IN_PROGRESS) {
                taskListModel.addElement(task);
            } else if (selected.equals("Завершенные") && task.getStatus() == Status.DONE) {
                taskListModel.addElement(task);
            } else if (selected.equals("Просроченные") && task.getStatus() == Status.OVERDUE) {
                taskListModel.addElement(task);
            }
        }
    }//GEN-LAST:event_statusFilterComboActionPerformed

    private void priorityFilterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityFilterComboActionPerformed
        String selected = (String) priorityFilterCombo.getSelectedItem();
        List<Task> tasks = controller.getTasksForCurrentUser();
        taskListModel.clear();
        for (Task task : tasks) {
            if ("Все".equals(selected)) {
                taskListModel.addElement(task);
            } else if (selected.equals("Высокий") && task.getPriority() == PriorityLevel.HIGH) {
                taskListModel.addElement(task);
            } else if (selected.equals("Средний") && task.getPriority() == PriorityLevel.MEDIUM) {
                taskListModel.addElement(task);
            } else if (selected.equals("Низкий") && task.getPriority() == PriorityLevel.LOW) {
                taskListModel.addElement(task);
            }
        }
    }//GEN-LAST:event_priorityFilterComboActionPerformed

    private void createdFilterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createdFilterComboActionPerformed
        String selected = (String) createdFilterCombo.getSelectedItem();
        List<Task> tasks = controller.getTasksForCurrentUser();
        if ("По возрастанию".equals(selected)) {
            tasks.sort(Comparator.comparing(task -> task.getCreatedAt()));
        } else if ("По убыванию".equals(selected)) {
            tasks.sort(Comparator.comparing((Task task) -> task.getCreatedAt()).reversed());
        }
        taskListModel.clear();
        for (Task task : tasks) {
            taskListModel.addElement(task);
        }
    }//GEN-LAST:event_createdFilterComboActionPerformed

    private void projectComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectComboActionPerformed
        Project selected = (Project) projectCombo.getSelectedItem();
        executorCombo.removeAllItems();
        if (selected != null) {
            List<User> executors = selected.getExecutors();
            for (User user : executors) {
                executorCombo.addItem(user);
            }
        }
    }//GEN-LAST:event_projectComboActionPerformed

    private void createProjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectBtnActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) executorsTable.getModel();
        List<User> executors = new ArrayList<>();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            Boolean checked = (Boolean) tableModel.getValueAt(i, 0);
            if (Boolean.TRUE.equals(checked)) {
                User executor = (User) tableModel.getValueAt(i, 1);
                executors.add(executor);
            }
        }
        if (!executors.isEmpty() && !projectNameField.getText().trim().isEmpty()
                && !projectDescriptionText.getText().trim().isEmpty()
                && !endProjectDate.getText().trim().isEmpty() && !startProjectDate.getText().trim().isEmpty()) {
            LocalDate startDate = null;
            LocalDate endDate = null;
            LocalDate today = LocalDate.now();
            try {
                startDate = LocalDate.parse(startProjectDate.getText(), formatter);
                endDate = LocalDate.parse(endProjectDate.getText(), formatter);
                if (endDate.isBefore(today) || startDate.isBefore(today)) {
                    JOptionPane.showMessageDialog(null, "Нельзя указать дату более раннюю, чем текущая!", null, JOptionPane.WARNING_MESSAGE);
                } else if (endDate.isBefore(startDate)) {
                    JOptionPane.showMessageDialog(null, "Дата окончания не может быть раньше даты начала!", null, JOptionPane.WARNING_MESSAGE);
                } else {
                    String newProjectName = projectNameField.getText().trim();
                    String projectDescripion = projectDescriptionText.getText().trim();
                    int transactionResult = controller.createNewProject(newProjectName, projectDescripion, startDate, endDate, executors);
                    if (transactionResult == -1) {
                        JOptionPane.showMessageDialog(null, "Проект с таким имененем уже существует!", null, JOptionPane.WARNING_MESSAGE);
                        projectNameField.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Проект успешно создан!", null, JOptionPane.INFORMATION_MESSAGE);
                        updateProjectsTable();
                        newProjectDialog.dispose();
                        List<JTextField> fields = new ArrayList<>(Arrays.asList(projectNameField, endProjectDate, startProjectDate));
                        clearFields(fields);
                        projectDescriptionText.setText("");
                    }
                }
            } catch (DateTimeParseException ex) {
                JOptionPane.showMessageDialog(null, "Дата не соотвествует формату ГГГГ-ММ-ДД", null, JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Проверьте заполненность всех полей!", null, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_createProjectBtnActionPerformed

    private void createUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserBtnActionPerformed
        if (!usernameField.getText().trim().isEmpty() && !fullNameField.getText().trim().isEmpty()) {
            String fullName = fullNameField.getText().trim();
            String username = usernameField.getText().trim();
            Role role = (Role) roleComboBox.getSelectedItem();
            boolean transactionResult = controller.createNewUser(fullName, username, role);
            if (transactionResult) {
                JOptionPane.showMessageDialog(null, "Пользователь успешно добавлен!", null, JOptionPane.INFORMATION_MESSAGE);
                updateExecutorsAvaliableTable();
                fullNameField.setText("");
                usernameField.setText("");
                newUserDialog.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Пользователь с таким имененем уже существует!", null, JOptionPane.WARNING_MESSAGE);
                fullNameField.setText("");
                usernameField.setText("");
            }
        }
    }//GEN-LAST:event_createUserBtnActionPerformed

    private void updateProjectsTable() {
        DefaultTableModel model = (DefaultTableModel) activeProjectsTable.getModel();
        model.setRowCount(0);
        List<Project> projects = controller.getProjectsForCurrentUser();
        Object[][] data = new Object[projects.size()][3];
        for (int i = 0; i < projects.size(); i++) {
            Project p = projects.get(i);
            data[i][0] = p.getProjectName();
            data[i][1] = p.getStatus();
            data[i][2] = p.getEndDate();
        }
        String[] titles = {"Название", "Статус", "Дедлайн"};
        activeProjectsTable.setModel(new DefaultTableModel(data, titles) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        ColorRenderer renderer = new ColorRenderer();
        for (int i = 0; i < activeProjectsTable.getColumnCount(); i++) {
            activeProjectsTable.getColumnModel().getColumn(i).setCellRenderer(renderer);
            renderer.setHorizontalAlignment(SwingConstants.CENTER);
        }
    }

    private void updateExecutorsAvaliableTable() {
        DefaultTableModel model = (DefaultTableModel) executorsTable.getModel();
        model.setRowCount(0);
        List<User> users = controller.getAllUsers();
        Object[][] data = new Object[users.size()][3];
        for (int i = 0; i < users.size(); i++) {
            User user = users.get(i);
            data[i][0] = Boolean.FALSE;
            data[i][1] = user;

        }
        String[] titles = {"Выбрать", "Пользователь"};
        executorsTable.setModel(new DefaultTableModel(data, titles) {
            @Override
            public Class<?> getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return String.class;
                }
                return null;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0;
            }
        });

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        executorsTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);

    }

    private void setUpUserAccess(Role role) {
        newProjectItem.setEnabled(role != Role.EXECUTOR);
        reportsItem.setEnabled(role != Role.EXECUTOR);
        newUserItem.setEnabled(role == Role.ADMIN);
        createTaskBtn.setEnabled(role != Role.EXECUTOR);
    }

    private void clearFields(List<JTextField> fields) {
        for (JTextField field : fields) {
            field.setText("");
        }
    }

    private void makeVisible(JDialog dialog) {
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }

    private void makeVisible(JFrame frame) {
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private void drawGanttDiagramm() {

    }

    private void startGUI() {
        authorizationDialog.pack();
        authorizationDialog.setLocationRelativeTo(null);
        authorizationDialog.setVisible(true);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activeProjectsTable;
    private javax.swing.JDialog authorizationDialog;
    private javax.swing.JPanel authorizationPanel;
    private javax.swing.JButton createNewTaskBtn;
    private javax.swing.JButton createProjectBtn;
    private javax.swing.JButton createTaskBtn;
    private javax.swing.JButton createUserBtn;
    private javax.swing.JComboBox<String> createdFilterCombo;
    private javax.swing.JLabel createdFilterLbl;
    private javax.swing.JLabel deadlineLbl;
    private javax.swing.JScrollPane descriptionScroll;
    private javax.swing.JPanel diagramPanel;
    private javax.swing.JLabel endDateLbl;
    private javax.swing.JTextField endProjectDate;
    private javax.swing.JComboBox<User> executorCombo;
    private javax.swing.JLabel executorLbl;
    private javax.swing.JScrollPane executorsScroll;
    private javax.swing.JDialog executorsStatistics;
    private javax.swing.JTable executorsTable;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton exportBtn;
    private javax.swing.JPanel exportBtnPanel;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JTextField fullNameField;
    private javax.swing.JLabel fullNameLbl;
    private javax.swing.JDialog ganttDiagramDialog;
    private javax.swing.JPanel lblPanel;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextField loginField;
    private javax.swing.JLabel loginInfoLbl;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenu menuOptions;
    private javax.swing.JDialog myTasksDialog;
    private javax.swing.JMenuItem myTasksItem;
    private javax.swing.JDialog newProjectDialog;
    private javax.swing.JMenuItem newProjectItem;
    private javax.swing.JDialog newTaskDialog;
    private javax.swing.JDialog newUserDialog;
    private javax.swing.JMenuItem newUserItem;
    private javax.swing.JPanel newUserPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JComboBox<PriorityLevel> priorityCombo;
    private javax.swing.JComboBox<String> priorityFilterCombo;
    private javax.swing.JLabel priorityFilterLbl;
    private javax.swing.JLabel priorityLbl;
    private javax.swing.JComboBox<Project
    > projectCombo;
    private javax.swing.JLabel projectDescriptionLbl;
    private javax.swing.JTextArea projectDescriptionText;
    private javax.swing.JPanel projectInfoPanel;
    private javax.swing.JLabel projectLbl;
    private javax.swing.JTextField projectNameField;
    private javax.swing.JLabel projectNameLbl;
    private javax.swing.JScrollPane projectsScroll;
    private javax.swing.JTree projectsTree;
    private javax.swing.JDialog reportsDialog;
    private javax.swing.JMenuItem reportsItem;
    private javax.swing.JComboBox<Role> roleComboBox;
    private javax.swing.JLabel roleLbl;
    private javax.swing.JLabel startDateLbl;
    private javax.swing.JTextField startProjectDate;
    private javax.swing.JScrollPane statisticsScroll;
    private javax.swing.JTable statisticsTable;
    private javax.swing.JComboBox<String> statusFilterCombo;
    private javax.swing.JLabel statusFilterLbl;
    private javax.swing.JLabel tableNameLbl;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JTextField taskDeadline;
    private javax.swing.JLabel taskDescriptionLbl;
    private javax.swing.JTextArea taskDescriptionText;
    private javax.swing.JPanel taskInfoPanel;
    private javax.swing.JTextField taskNameField;
    private javax.swing.JLabel taskNameLbl;
    private javax.swing.JScrollPane taskdescriptionScroll;
    private javax.swing.JList<Task> tasksList;
    private javax.swing.JScrollPane tasksScroll;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLbl;
    // End of variables declaration//GEN-END:variables
}
